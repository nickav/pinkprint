#!/usr/bin/env node

const program = require('commander')
const package = require('../package')
const lib = require('../lib')

const TEMPLATE_DIR = '.blueprint'

program
  .version(package.version)
  .description(package.description)
  .usage('<command> [options]')

program
  .command('new <template>')
  .alias('n')
  .description('Creates a new blueprint')
  .action((template) => lib.create(TEMPLATE_DIR, template))

program
  .command('list [template]')
  .alias('l')
  .description('Shows all available blueprints')
  .action((template) => lib.list(TEMPLATE_DIR))

program
  .command('generate <template> <name>')
  .alias('g')
  .description('Creates static files from a blueprint')
  .option('-f, --force', 'Overwrite any existing files')
  .option('-d, --dry', 'Preview of what will happen without creating anything.')
  .action((template, name) => lib.generate(TEMPLATE_DIR, template, name))

program.parse(process.argv)

// error on invalid commands
if (program.args.length) {
  let command = program.args[program.args.length - 1]
  if (typeof command !== 'object') {
    let me = 'blue'
    console.log(
      `${me}: '${command}' is not a valid ${me} command. See '${me} --help'`
    )
  }
} else {
  program.outputHelp()
}
